version: "3"
services:
  web:
    build:
      context: ./back
      dockerfile: ./Dockerfile
    command: sh -c "python manage.py makemigrations --noinput &&
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      python manage.py initdb &&
      python manage.py create_get_features_function &&
      gunicorn geosight.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4"
    restart: always
    volumes:
      - ./back/:/var/www/geosight
      - media_data:/var/www/geosight/media
    ports:
      - 8001:8000
    env_file:
     - ./back/.env
    depends_on:
      - db
      - redis
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/admin/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
  daphne:
    build:
      context: ./back
      dockerfile: ./back/Dockerfile
    command: daphne -b 0.0.0.0 -p 8089 geosight.asgi:application
    restart: always
    ports:
      - 8090:8089
    volumes:
      - ./back/:/var/www/geosight
      - media_data:/var/www/geosight/media
    env_file:
      - ./back/.env
    depends_on:
      web:
        condition: service_healthy
  db:
    image: postgis/postgis:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5433:5432
  osm_db:
    image: postgis/postgis:latest
    volumes:
      - postgres_osm_data:/var/lib/postgresql/data
      - ./scripts/init-osm-extensions.sql:/docker-entrypoint-initdb.d
      - ./osm_backup.dump:/osm_backup.dump
    environment:
      POSTGRES_DB: osm-data
      POSTGRES_USER: ${DB_USER_OSM}
      POSTGRES_PASSWORD: ${DB_PASSWORD_OSM}
    ports:
      - 5434:5433
  martin:
    image: maplibre/martin:latest
    restart: always
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
    ports:
      - 3001:3000
    depends_on:
      web:
        condition: service_healthy
  nginx:
    image: nginx
    env_file:
      - .env
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./back/static/:/var/www/geosight/static
      - media_data:/var/www/geosight/media
    restart: always
    ports:
      - 80:80
    depends_on:
      - web
      - martin
      - daphne
  celery:
    build:
      context: ./back
    command: celery -A geosight.celery worker -l info -E -Q ${QUEUE_DEFAULT}  -c 10
    volumes:
      - ./back/:/var/www/geosight
    env_file:
      - ./back/.env
    depends_on:
      - redis
      - web
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6380:6379

volumes:
  postgres_data:
  postgres_osm_data:
  osm_postgres_data:
  media_data: